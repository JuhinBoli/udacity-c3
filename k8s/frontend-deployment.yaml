apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    service: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      service: frontend
  template:
    metadata:
      labels:
        service: frontend
    spec:
      containers:
      - image: myxuyen0889/udagram-frontend:v3
        name: frontend
        imagePullPolicy: Always  
        resources:
          requests:
            memory: "512Mi"
            cpu: "150m"
          limits:
            memory: "1024Mi"
            cpu: "300m"    
        ports:
          - containerPort: 80                 
        env:
        - name: URL
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: URL
        - name: AWS_PROFILE
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_PROFILE
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_REGION
        - name: AWS_BUCKET
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_BUCKET
        - name: JWT_SECRET
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: JWT_SECRET
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRES_HOST
        - name: POSTGRES_DATABASE
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRES_DATABASE
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRES_PASSWORD 
        - name: POSTGRES_USERNAME
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRES_USERNAME 
        - name: NODE_OPTIONS
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: NODE_OPTIONS    
        volumeMounts:
        - name: aws-secret
          mountPath: "/root/.aws/"
          readOnly: true        
      restartPolicy: Always
      volumes:
      - name: aws-secret
        secret:
          secretName: aws-secret